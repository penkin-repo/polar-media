# Название нашего "действия"
name: Build and Deploy Astro to FTP

# Запускать при push в ветку 'main'
on:
  push:
    branches:
      - main # или 'master'

jobs:
  build-and-deploy:
    # Запускаем на свежей версии Ubuntu
    runs-on: ubuntu-latest
    
    steps:
      # ШАГ 1: Скачиваем исходный код вашего репозитория
      - name: Checkout Code
        uses: actions/checkout@v3

      # ШАГ 2: Устанавливаем pnpm (ЭТО ВАЖНОЕ ИЗМЕНЕНИЕ)
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10 # Укажите вашу версию pnpm, если она отличается

      # ШАГ 3: Устанавливаем Node.js. 
      # Этот шаг должен идти ПОСЛЕ установки pnpm для правильной работы кэширования
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          # Используем кэш для pnpm, а не npm
          cache: 'pnpm'

      # ШАГ 4: Устанавливаем все зависимости проекта через pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile # Это аналог 'npm ci' для pnpm

      # ШАГ 5: Собираем проект. Astro сам поймет, что нужно использовать pnpm.
      - name: Build Project
        run: pnpm run build

      # ШАГ 6: Загружаем результат сборки на хостинг (этот блок без изменений)
      - name: SFTP Deploy
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          # Адрес сервера (тот же, что и для FTP)
          server: ${{ secrets.FTP_SERVER }}
          # Логин (тот же)
          username: ${{ secrets.FTP_USERNAME }}
          # Пароль (тот же)
          password: ${{ secrets.FTP_PASSWORD }}
          
          # Порт SFTP
          port: 22
          
          # Локальная папка, которую нужно загрузить
          local_path: ./dist/
          
          # Папка на сервере, куда загружать
          remote_path: /polar-media/public_html/
          
          # (Опционально) Аргументы. '-a' означает "архивный режим",
          # '-v' - подробный вывод, '-z' - сжатие.
          # '--delete' удалит старые файлы на сервере (аналог dangerous-clean-slate).
          # Используйте --delete с осторожностью!
          # args: -avz --delete